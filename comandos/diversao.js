//REQUERINDO MODULOS
const msgs_texto = require('../lib/msgs')
const {criarTexto, primeiraLetraMaiuscula, erroComandoMsg, removerNegritoComando} = require("../lib/util")
const path = require("path")
const api = require('../lib/api')

module.exports = diversao = async(client,message) => {
    try {
        const {id, from, sender, isGroupMsg, chat, caption, quotedMsg, quotedMsgObj, mentionedJidList, body} = message
        const commands = caption || body || ''
        var command = commands.toLowerCase().split(' ')[0] || ''
        command = removerNegritoComando(command)
        const args =  commands.split(' ')
        const ownerNumber = process.env.NUMERO_DONO.trim() // N√∫mero do administrador do bot
        const botNumber = await client.getHostNumber()
        const groupId = isGroupMsg ? chat.groupMetadata.id : ''
        const groupAdmins = isGroupMsg ? await client.getGroupAdmins(groupId) : ''
        const isGroupAdmins = isGroupMsg ? groupAdmins.includes(sender.id) : false
        const isBotGroupAdmins = isGroupMsg ? groupAdmins.includes(botNumber + '@c.us') : false
        const groupOwner = isGroupMsg ? chat.groupMetadata.owner : ''
        const gays = [
            'üòÇ ¬°ùêÑùêëùêÑùêí ùêåùêÄùêëùêàùêÇùêéùêç ùêèùêÑùêëùêÉùêàùêÉùêé! üè≥Ô∏è‚Äçüåà',
            'ùüèùüéùüé% üè≥Ô∏è‚Äçüåà',
            '99% üè≥Ô∏è‚Äçüåà',
            '98% üè≥Ô∏è‚Äçüåà',
            '97% üè≥Ô∏è‚Äçüåà',
            '96% üè≥Ô∏è‚Äçüåà',
            '95% üè≥Ô∏è‚Äçüåà',
            '94% üè≥Ô∏è‚Äçüåà',
            '93% üè≥Ô∏è‚Äçüåà',
            '92% üè≥Ô∏è‚Äçüåà',
            '91% üè≥Ô∏è‚Äçüåà',
            '90% üè≥Ô∏è‚Äçüåà',
            '89% üè≥Ô∏è‚Äçüåà',
            '88% üè≥Ô∏è‚Äçüåà',
            '87% üè≥Ô∏è‚Äçüåà',
            '86% üè≥Ô∏è‚Äçüåà',
            '85% üè≥Ô∏è‚Äçüåà',
            '84% üè≥Ô∏è‚Äçüåà',
            '83% üè≥Ô∏è‚Äçüåà',
            '82% üè≥Ô∏è‚Äçüåà',
            '81% üè≥Ô∏è‚Äçüåà',
            '80% üè≥Ô∏è‚Äçüåà',
            '79% üè≥Ô∏è‚Äçüåà',
            '78% üè≥Ô∏è‚Äçüåà',
            '77% üè≥Ô∏è‚Äçüåà',
            '76% üè≥Ô∏è‚Äçüåà',
            '75% üè≥Ô∏è‚Äçüåà',
            '74% üè≥Ô∏è‚Äçüåà',
            '73% üè≥Ô∏è‚Äçüåà',
            '72% üè≥Ô∏è‚Äçüåà',
            '71% üè≥Ô∏è‚Äçüåà',
            '70% üè≥Ô∏è‚Äçüåà',
            '69% üè≥Ô∏è‚Äçüåà',
            '68% üè≥Ô∏è‚Äçüåà',
            '67% üè≥Ô∏è‚Äçüåà',
            '66% üè≥Ô∏è‚Äçüåà',
            '64% üè≥Ô∏è‚Äçüåà',
            '63% üè≥Ô∏è‚Äçüåà',
            '62% üè≥Ô∏è‚Äçüåà',
            '61% üè≥Ô∏è‚Äçüåà',
            '60% üè≥Ô∏è‚Äçüåà',
            '59% üè≥Ô∏è‚Äçüåà',
            '58% üè≥Ô∏è‚Äçüåà',
            '57% üè≥Ô∏è‚Äçüåà',
            '56% üè≥Ô∏è‚Äçüåà',
            '55% üè≥Ô∏è‚Äçüåà',
            '54% üè≥Ô∏è‚Äçüåà',
            '53% üè≥Ô∏è‚Äçüåà',
            '52% üè≥Ô∏è‚Äçüåà',
            '51% üè≥Ô∏è‚Äçüåà',
            '50% üè≥Ô∏è‚Äçüåà',
            '49% üè≥Ô∏è‚Äçüåà',
            '48% üè≥Ô∏è‚Äçüåà',
            '47% üè≥Ô∏è‚Äçüåà',
            '46% üè≥Ô∏è‚Äçüåà',
            '45% üè≥Ô∏è‚Äçüåà',
            '44% üè≥Ô∏è‚Äçüåà',
            '43% üè≥Ô∏è‚Äçüåà',
            '42% üè≥Ô∏è‚Äçüåà',
            '41% üè≥Ô∏è‚Äçüåà',
            '40% üè≥Ô∏è‚Äçüåà',
            '39% üè≥Ô∏è‚Äçüåà',
            '38% üè≥Ô∏è‚Äçüåà',
            '37% üè≥Ô∏è‚Äçüåà',
            '36% üè≥Ô∏è‚Äçüåà',
            '35% üè≥Ô∏è‚Äçüåà',
            '34% üè≥Ô∏è‚Äçüåà',
            '33% üè≥Ô∏è‚Äçüåà',
            '32% üè≥Ô∏è‚Äçüåà',
            '31% üè≥Ô∏è‚Äçüåà',
            '30% üè≥Ô∏è‚Äçüåà',
            '29% üè≥Ô∏è‚Äçüåà',
            '28% üè≥Ô∏è‚Äçüåà',
            '27% üè≥Ô∏è‚Äçüåà',
            '26% üè≥Ô∏è‚Äçüåà',
            '25% üè≥Ô∏è‚Äçüåà',
            '24% üè≥Ô∏è‚Äçüåà',
            '23% üè≥Ô∏è‚Äçüåà',
            '22% üè≥Ô∏è‚Äçüåà',
            '21% üè≥Ô∏è‚Äçüåà',
            '20% üè≥Ô∏è‚Äçüåà',
            '19% üè≥Ô∏è‚Äçüåà',
            '18% üè≥Ô∏è‚Äçüåà',
            '17% üè≥Ô∏è‚Äçüåà',
            '16% üè≥Ô∏è‚Äçüåà',
            '15% üè≥Ô∏è‚Äçüåà',
            '14% üè≥Ô∏è‚Äçüåà',
            '13% üè≥Ô∏è‚Äçüåà',
            '12% üè≥Ô∏è‚Äçüåà',
            '11% üè≥Ô∏è‚Äçüåà',
            '10% üè≥Ô∏è‚Äçüåà',
            '9% üè≥Ô∏è‚Äçüåà',
            '8% üè≥Ô∏è‚Äçüåà',
            '7% üè≥Ô∏è‚Äçüåà',
            '6% üè≥Ô∏è‚Äçüåà',
            '5% üè≥Ô∏è‚Äçüåà',
            '4% üè≥Ô∏è‚Äçüåà',
            '3% üè≥Ô∏è‚Äçüåà',
            '2% üè≥Ô∏è‚Äçüåà',
            '1% üè≥Ô∏è‚Äçüåà',
            '0% üè≥Ô∏è‚Äçüåà',
            ]

        switch(command){
            case '√ódetector' :
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                if(!quotedMsg) return await client.reply(from, erroComandoMsg(command) , id)
                var imgsDetector = ['verdade','vaipra','mentiroso','meengana','kao','incerteza','estresse','conversapraboi']
                var indexAleatorio = Math.floor(Math.random() * imgsDetector.length)
                await client.sendFile(from, './media/img/comandos/detector/calibrando.png', 'detector.png', msgs_texto.diversao.detector.espera, id)
                await client.sendFile(from, `./media/img/comandos/detector/${imgsDetector[indexAleatorio]}.png`, 'detector.png', "", quotedMsgObj.id)
                break
            
            case '√óviadometro' :
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                if(!quotedMsg && mentionedJidList.length == 0) return await client.reply(from, erroComandoMsg(command), id)
                if(mentionedJidList.length > 1) return await client.reply(from, msgs_texto.diversao.viadometro.apenas_um, id)
                var respostas = msgs_texto.diversao.viadometro.respostas
                var indexAleatorio = Math.floor(Math.random() * respostas.length), idResposta = null, alvo = null
                if(mentionedJidList.length == 1) idResposta = id, alvo = mentionedJidList[0].replace(/@c.us/g, '')
                else idResposta = quotedMsgObj.id, alvo = quotedMsgObj.author.replace(/@c.us/g, '')
                if(ownerNumber == alvo) indexAleatorio = 0
                var respostaTexto = criarTexto(msgs_texto.diversao.viadometro.resposta,respostas[indexAleatorio])
                await client.reply(from, respostaTexto, idResposta)
                break
            
            case '√óbafometro' :
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                if(!quotedMsg && mentionedJidList.length == 0) return await client.reply(from, erroComandoMsg(command), id)
                if (mentionedJidList.length > 1) return await client.reply(from, msgs_texto.diversao.bafometro.apenas_um, id)
                var respostas = msgs_texto.diversao.bafometro.respostas
                var indexAleatorio = Math.floor(Math.random() * respostas.length), idResposta = null, alvo = null
                if(mentionedJidList.length == 1) idResposta = id, alvo = mentionedJidList[0].replace(/@c.us/g, '')
                else idResposta = quotedMsgObj.id, alvo = quotedMsgObj.author.replace(/@c.us/g, '')
                if(ownerNumber == alvo) indexAleatorio = 0
                var respostaTexto = criarTexto(msgs_texto.diversao.bafometro.resposta, respostas[indexAleatorio])
                await client.reply(from, respostaTexto, idResposta)
                break

            case "√ócaracoroa":
                var ladosMoeda = ["cara","coroa"], indexAleatorio = Math.floor(Math.random() * ladosMoeda.length)
                await client.reply(from, msgs_texto.diversao.caracoroa.espera, id)
                var respostaTexto = criarTexto(msgs_texto.diversao.caracoroa.resposta, primeiraLetraMaiuscula(ladosMoeda[indexAleatorio]))
                await client.sendFile(from, path.resolve(`media/img/comandos/caracoroa/${ladosMoeda[indexAleatorio]}.png`), `${ladosMoeda[indexAleatorio]}.png`, respostaTexto, id)
                break

            case "√óppt":
                var ppt = ["pedra","papel","tesoura"], indexAleatorio = Math.floor(Math.random() * ppt.length)
                if(args.length === 1) return await client.reply(from, erroComandoMsg(command), id)
                if(!ppt.includes(args[1].toLowerCase())) return await client.reply(from, msgs_texto.diversao.ppt.opcao_erro, id)
                var escolhaBot = ppt[indexAleatorio], iconeEscolhaBot = null, escolhaUsuario = args[1].toLowerCase(), iconeEscolhaUsuario = null, vitoriaUsuario = null
                if(escolhaBot == "pedra"){
                    iconeEscolhaBot = "‚úä"
                    if(escolhaUsuario == "pedra") vitoriaUsuario = null, iconeEscolhaUsuario = "‚úä"
                    if(escolhaUsuario == "tesoura") vitoriaUsuario = false, iconeEscolhaUsuario = "‚úåÔ∏è"
                    if(escolhaUsuario == "papel") vitoriaUsuario = true, iconeEscolhaUsuario = "‚úã"
                } else if(escolhaBot == "papel"){
                    iconeEscolhaBot = "‚úã"
                    if(escolhaUsuario == "pedra") vitoriaUsuario = false, iconeEscolhaUsuario = "‚úä"
                    if(escolhaUsuario == "tesoura") vitoriaUsuario = true, iconeEscolhaUsuario = "‚úåÔ∏è"
                    if(escolhaUsuario == "papel") vitoriaUsuario = null, iconeEscolhaUsuario = "‚úã"
                } else  {
                    iconeEscolhaBot = "‚úåÔ∏è"
                    if(escolhaUsuario == "pedra") vitoriaUsuario = true, iconeEscolhaUsuario = "‚úä"
                    if(escolhaUsuario == "tesoura") vitoriaUsuario = null, iconeEscolhaUsuario = "‚úåÔ∏è"
                    if(escolhaUsuario == "papel") vitoriaUsuario = false, iconeEscolhaUsuario = "‚úã"
                }
                var textoResultado = ''
                if(vitoriaUsuario == true) textoResultado = msgs_texto.diversao.ppt.resposta.vitoria
                else if(vitoriaUsuario == false) textoResultado = msgs_texto.diversao.ppt.resposta.derrota
                else textoResultado = msgs_texto.diversao.ppt.resposta.empate
                await client.reply(from, criarTexto(textoResultado, iconeEscolhaUsuario, iconeEscolhaBot), id)
                break

            case "√ómassacote":
            case '√ómascote':
                var mascoteFotoURL = "https://i.imgur.com/mVwa7q4.png"
                await client.sendFileFromUrl(from, mascoteFotoURL, 'mascote.jpeg', 'Whatsapp Jr.', id)
                break 

            case '√ómalacos':
                const malacosFotoURL = "https://i.imgur.com/7bcn2TK.jpg"
                await client.sendFileFromUrl(from, malacosFotoURL, 'malacos.jpg', 'Somos o problema', id)
                break

            case '√óroletarussa':
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                if (!isGroupAdmins) return await client.reply(from, msgs_texto.permissao.apenas_admin , id)
                if (!isBotGroupAdmins) return await client.reply(from,msgs_texto.permissao.bot_admin, id)
                var idParticipantesAtuais = await client.getGroupMembersId(groupId)
                idParticipantesAtuais.splice(idParticipantesAtuais.indexOf(groupOwner),1)
                idParticipantesAtuais.splice(idParticipantesAtuais.indexOf(botNumber+'@c.us'),1)
                if(idParticipantesAtuais.length == 0) return await client.reply(from, msgs_texto.diversao.roletarussa.sem_membros, id)
                var indexAleatorio = Math.floor(Math.random() * idParticipantesAtuais.length)
                var respostaTexto = criarTexto(msgs_texto.diversao.roletarussa.resposta, idParticipantesAtuais[indexAleatorio].replace(/@c.us/g, ''))
                await client.reply(from, msgs_texto.diversao.roletarussa.espera , id)
                await client.sendTextWithMentions(from, respostaTexto)
                await client.removeParticipant(groupId, idParticipantesAtuais[indexAleatorio])
                break
            
            case '√ócasal':
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                var idParticipantesAtuais = await client.getGroupMembersId(groupId)
                if(idParticipantesAtuais.length < 2) return await client.reply(from, msgs_texto.diversao.casal.minimo, id)
                var indexAleatorio = Math.floor(Math.random() * idParticipantesAtuais.length)
                var pessoaEscolhida1 = idParticipantesAtuais[indexAleatorio]
                idParticipantesAtuais.splice(indexAleatorio,1)
                indexAleatorio = Math.floor(Math.random() * idParticipantesAtuais.length)
                var pessoaEscolhida2 = idParticipantesAtuais[indexAleatorio]
                var respostaTexto = criarTexto(msgs_texto.diversao.casal.resposta, pessoaEscolhida1.replace(/@c.us/g, ''), pessoaEscolhida2.replace(/@c.us/g, ''))
                await client.sendTextWithMentions(from, respostaTexto)
                break

            case '√ógadometro':
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                if(!quotedMsg && mentionedJidList.length === 0) return await client.reply(from, erroComandoMsg(command) , id)
                if(mentionedJidList.length > 1) return await client.reply(from, msgs_texto.diversao.gadometro.apenas_um , id)
                var respostas = msgs_texto.diversao.gadometro.respostas 
                var indexAleatorio = Math.floor(Math.random() * respostas.length), idResposta = null, alvo = null
                if (mentionedJidList.length == 1) idResposta = id, alvo = mentionedJidList[0].replace(/@c.us/g, '')
                else idResposta = quotedMsgObj.id, alvo = quotedMsgObj.author.replace(/@c.us/g, '')
                if(ownerNumber == alvo) indexAleatorio = 0
                var respostaTexto = criarTexto(msgs_texto.diversao.gadometro.resposta, respostas[indexAleatorio])
                await client.reply(from, respostaTexto, idResposta)       
                break

            case '√ógay':
                  if (!isGroupMsg) return client.reply(from, '‚ùå *¬°ùë≥ùíê ùíîùíÜùíèùíïùíäùíéùíêùíî, ¬°ùíÜùíîùíïùíÜ ùíÑùíêùíéùíÇùíèùíÖùíê ùíîùíêùíçùíê ùíîùíÜ ùíëùíñùíÜùíÖùíÜ ùíñùíîùíÇùíì ùíÖùíÜùíèùíïùíìùíê ùíÖùíÜ ùíàùíìùíñùíëùíêùíî!* ‚ùå', id)
                  const ratings = args.join(' ')
                  const medidorgays = gays[Math.floor(Math.random() * (gays.length))]
                  if (!ratings) client.reply(from, '')
                  const logo = './media/lgtb.jpg'
                  await client.sendTextWithMentions(from, `üñ§üòè *¬°ùêåùêÑùêÉùêàùêÉùêéùêë ùêÉùêÑ ùêåùêÄùêãùêÉùêàùêìùêéùêí ùêÜùêÄùêòùêí!* üòèüñ§\n\nüò≥ @${mentionedJidList[0].replace('@c.us', '')}, *¬°ùëØùíÜùíéùíêùíî ùíéùíÜùíÖùíäùíÖùíê ùíïùíñ ùíèùíäùíóùíÜùíç ùíÖùíÜ ùë¥ùíÇùíìùíäùíÑùíêùíè ùíëùíÜùíìùíÖùíäùíÖùíê ùíö ùíâùíÇùíî ùíÖùíÇùíÖùíê ùíñùíè*  *"${medidorgays}"*  *ùíÜùíè ùíîùíÜùíì ùíñùíèùíÇ ùë¥ùíÇùíìùíäùíÑùíêùíè ùíÖùíÜ ùíéùíäùíÜùíìùíÖùíÇ ùíéùíÇùíî ùíÜùíè ùíÜùíç ùëÆùíìùíñùíëùíê!* üò≥\n\n@${mentionedJidList[0].replace('@c.us', '')}\nüñ§üò≥ *¬°ùêåùêÄùêãùêÉùêàùêìùêé ùêåùêÄùêëùêàùêÇùêéùêç ùêÉùêÑ ùêåùêàùêÑùêëùêÉùêÄ!* üò≥üñ§`)
            break

            case '√ótop5':
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                if(args.length === 1) return await client.reply(from, erroComandoMsg(command), id)
                var temaRanking = body.slice(6).trim(), idParticipantesAtuais = await client.getGroupMembersId(groupId)
                if(idParticipantesAtuais.length < 5) return await client.reply(from,msgs_texto.diversao.top5.erro_membros, id)
                var respostaTexto = criarTexto(msgs_texto.diversao.top5.resposta_titulo, temaRanking)
                for (let i = 0 ; i < 5 ; i++){
                    var medalha = ""
                    switch(i+1){
                        case 1:
                            medalha = 'ü•á'
                        break
                        case 2:
                            medalha = 'ü•à'
                        break
                        case 3:
                            medalha = 'ü•â'
                        break
                        default:
                            medalha = ''
                    }
                    var indexAleatorio = Math.floor(Math.random() * idParticipantesAtuais.length)
                    var membroSelecionado = idParticipantesAtuais[indexAleatorio]
                    respostaTexto += criarTexto(msgs_texto.diversao.top5.resposta_itens, medalha, i+1, membroSelecionado.replace(/@c.us/g, ''))
                    idParticipantesAtuais.splice(idParticipantesAtuais.indexOf(membroSelecionado),1)                
                }
                await client.sendTextWithMentions(from, respostaTexto)
                break

            case '√ópar':
                if (!isGroupMsg) return await client.reply(from, msgs_texto.permissao.grupo, id)
                if(mentionedJidList.length !== 2) return await client.reply(from, erroComandoMsg(command) , id)
                var respostas = msgs_texto.diversao.par.respostas
                var indexAleatorio = Math.floor(Math.random() * respostas.length)
                var respostaTexto = criarTexto(msgs_texto.diversao.par.resposta, mentionedJidList[0].replace(/@c.us/g, ''), mentionedJidList[1].replace(/@c.us/g, ''), respostas[indexAleatorio])
                await client.sendTextWithMentions(from, respostaTexto)
                break

            case "√ófch":
                try{
                    var respostaFrase = await api.obterCartasContraHu()
                    await client.reply(from, respostaFrase, id)
                } catch(err){
                    await client.reply(from, err.message, id)
                }
                break    
        }
    } catch(err){
        throw err
    }
    
}